# .env.example
#
# This file serves as a template for the .env file, which configures environment
# variables for the application. To use it, copy this file to .env and fill in
# the appropriate values. Do not commit the .env file to version control to
# protect sensitive information.
#
# Mandatory variables are required for the application to run properly.
# Optional variables are customizable and will fall back to defaults if not set.

###############################################################################
# Mandatory Variables (Required for the application to function)
###############################################################################

# SECRET_KEY:
# A unique, secure key used for signing session cookies and tokens. This must be
# set to a random, unpredictable string and kept confidential.
# Example: 'your_unique_secret_key_here' (generate a secure random string)
SECRET_KEY=

# CORS_ALLOW_ORIGINS:
# Defines the allowed origins for frontend requests to the backend (CORS).
# Provide a comma-separated list of origins.
# Example: 'http://localhost:5173,http://127.0.0.1:5173'
CORS_ALLOW_ORIGINS=

# DATABASE_FILE:
# Specifies the path to the SQLite database file. Required for database access.
# Default: 'backend/bitcoin_tracker.db' (relative path)
# Can be set to an absolute path if preferred.
DATABASE_FILE=backend/bitcoin_tracker.db

###############################################################################
# Optional Variables (Customizable, with defaults if not set)
###############################################################################

# DATABASE_URL:
# An alternative to DATABASE_FILE for specifying a custom database connection.
# Overrides DATABASE_FILE if provided.
# Example: 'sqlite:////absolute/path/to/bitcoin_tracker.db'
# DATABASE_URL=

# VITE_API_BASE_URL:
# Sets the base URL for API requests from the frontend.
# Default: '/api' (used by the frontend if not specified)
# Example: '/api'
# VITE_API_BASE_URL=/api

# DEBUG:
# Enables debug mode for detailed output and error messages.
# Set to 'True' for development, 'False' for production.
# Default: 'False' if not set.
# DEBUG=True

# LOG_LEVEL:
# Controls the application's logging verbosity.
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
# Default: 'INFO' if not set.
# LOG_LEVEL=INFO